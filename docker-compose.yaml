
services:
  nginx:
    image: nginx:alpine
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`localhost`)"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    networks:
      - citus

  traefik:
    image: traefik:latest
    container_name: traefik
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - "--api=true"
      - "--api.insecure=false"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker.exposedbydefault=false"
    networks:
      - citus

  # docker exec -it citus_master psql -U postgres -d hpdm_db -c "\dt"
  citus_master:
    image: citusdata/citus:latest
    ports:
      - "5432:5432"
    container_name: citus_master
    environment:
      POSTGRES_DB: hpdm_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    command: ["postgres", "-c", "max_connections=2000"]
    depends_on:
      - citus_worker
    networks:
      - citus

  citus_worker:
    image: citusdata/citus:latest
    environment:
      POSTGRES_DB: hpdm_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - citus
    
  backend:
    # image: hpdm_app
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@citus_master:5432/hpdm_db?schema=public"
      JWT_SECRET: ~secretik~
    deploy:
      update_config:
          parallelism: 2
          delay: 10s
    depends_on:
      - citus_master
      - citus_worker
    networks:
      - citus
    restart: always

networks:
  citus:
    driver: bridge

